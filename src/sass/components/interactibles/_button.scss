@use '../../abstracts/' as *;
@use '../mixins' as *;

.button:is([data-variant='default']) {
	@include createButton($color: white);
}

.button:is([data-variant='hoverable']) {
	@include createButton(
		$padding: $button-hoverable-padding,
		$color: $button-hoverable-color,
		$color-on-hov: $button-hoverable-color,
		$background-color: $button-hoverable-background-color,
		$border-radius: $button-hoverable-border-radius,
		$background-color-on-hov: $button-hoverable-background-color-on-hov
	);
}

.button:is([data-variant='red']) {
	@include createButton(
		$padding: $button-red-padding,
		$color: $button-red-color,
		$color-on-hov: $button-red-color,
		$background-color: $button-red-background-color,
		$border-radius: $button-red-border-radius,
		$background-color-on-hov: $button-red-background-color-on-hov
	);
}

.button:is([data-variant='filter']) {
	@include createButton(
		$padding: $button-filter-padding,
		$border: $button-filter-border,
		$color: $button-filter-color,
		$color-on-hov: $button-filter-color-on-hov,
		$background-color: $button-filter-background-color,
		$background-color-on-hov: $button-filter-background-color-on-hov,
		$border-radius: $button-filter-border-radius
	);

	&:is(:focus-visible, :hover) .icon {
		color: var(--clr-error-400);
	}
}

.button:is([data-secondary-variant='cube']) {
	border-radius: $border-radius-cubed !important;
}

.button:is([data-secondary-variant='select-list-item']) {
	padding: 0.5em 1em;

	color: var(--clr-accent-400);
	border-radius: 100vmax;

	& .item__checkbox {
		@include transformCenter($left: 1.5rem);

		visibility: hidden;
	}

	&:is(:focus-visible, :hover) .icon {
		visibility: hidden;
	}

	&:is(:focus-visible, :hover) .item__checkbox {
		visibility: visible;
	}
}

// ========================
// Fixing issues
// =========================
.button {
	display: grid;

	& .icon {
		place-self: center;
	}
}

.button:is([data-selected='true']) {
	color: white;

	background-color: $select-box-background-on-select;
	border-color: $select-box-background-on-select;
}
